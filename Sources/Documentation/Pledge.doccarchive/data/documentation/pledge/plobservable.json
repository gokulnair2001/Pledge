{"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PLObservable"}],"role":"symbol","symbolKind":"class","roleHeading":"Class","externalID":"s:6Pledge12PLObservableC","title":"PLObservable","navigatorTitle":[{"kind":"identifier","text":"PLObservable"}],"modules":[{"name":"Pledge"}]},"sections":[],"identifier":{"url":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"PLObservable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">","kind":"text"}],"languages":["swift"]}]}],"abstract":[{"type":"text","text":"A thread-safe observable container that notifies subscribers when its value changes."},{"text":" ","type":"text"},{"text":"Supports batch updates, thread-specific delivery, and priority-ordered notifications.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/pledge.Pledge\/documentation\/Pledge"]]},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/init(_:)"],"anchor":"Initializers"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/beginUpdates()","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/compactMap()","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/debounce(for:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/deliver(on:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/deliverOnMain()","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/distinctUntilChanged()","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/distinctUntilChanged(by:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/endUpdates()","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/filter(_:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/flatMap(_:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/flatMapSuccess(_:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/map(_:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/mapError(_:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/mapSuccess(_:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/merge(_:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/notifyObservers()","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/removeAllSubscribers()","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/setValue(_:notify:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/skip(_:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/subscribe(_:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/throttle(for:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/unsubscribe(_:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/withPriority(_:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/zip(_:)"],"anchor":"Instance-Methods"},{"generated":true,"identifiers":["doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/failure(_:)","doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/success(_:)"],"anchor":"Type-Methods","title":"Type Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/pledge\/plobservable"]}],"references":{"doc://pledge.Pledge/documentation/Pledge/PLObservable/setValue(_:notify:)":{"kind":"symbol","abstract":[{"type":"text","text":"Updates the value and optionally notifies subscribers"}],"type":"topic","title":"setValue(_:notify:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setValue"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp"},{"text":", ","kind":"text"},{"text":"notify","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/setValue(_:notify:)","role":"symbol","url":"\/documentation\/pledge\/plobservable\/setvalue(_:notify:)"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/subscribe(_:)":{"kind":"symbol","url":"\/documentation\/pledge\/plobservable\/subscribe(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"subscribe","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp","text":"T"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Foundation4UUIDV","kind":"typeIdentifier","text":"UUID"}],"role":"symbol","abstract":[{"text":"Subscribes to value changes","type":"text"}],"title":"subscribe(_:)","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/subscribe(_:)"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/success(_:)":{"type":"topic","kind":"symbol","title":"success(_:)","abstract":[{"text":"Creates a new observable with a success value of type U.","type":"text"}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/success(_:)","url":"\/documentation\/pledge\/plobservable\/success(_:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Result<Any, any Error>"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"success","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"U"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"U","kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableCAAs6ResultOyyps5Error_pGRszlE7successyACyAEyqd__qd_0_GGqd__sAFRd_0_r0_lFZ1UL_qd__mfp"},{"kind":"text","text":") -> "},{"text":"PLObservable","kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"kind":"text","text":"<"},{"text":"U","preciseIdentifier":"s:6Pledge12PLObservableCAAs6ResultOyyps5Error_pGRszlE7successyACyAEyqd__qd_0_GGqd__sAFRd_0_r0_lFZ1UL_qd__mfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableCAAs6ResultOyyps5Error_pGRszlE7successyACyAEyqd__qd_0_GGqd__sAFRd_0_r0_lFZ1EL_qd_0_mfp","text":"E"},{"text":">>","kind":"text"}]},"doc://pledge.Pledge/documentation/Pledge/PLObservable/map(_:)":{"kind":"symbol","url":"\/documentation\/pledge\/plobservable\/map(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">(("},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp"},{"text":") -> ","kind":"text"},{"text":"U","kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC3mapyACyqd__Gqd__xclF1UL_qd__mfp"},{"text":") -> ","kind":"text"},{"text":"PLObservable","preciseIdentifier":"s:6Pledge12PLObservableC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC3mapyACyqd__Gqd__xclF1UL_qd__mfp","text":"U"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"type":"text","text":"Transforms the values emitted by an observable using a provided transformation function."}],"title":"map(_:)","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/map(_:)"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/beginUpdates()":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Begins a batch update session, temporarily suspending notifications"},{"text":" ","type":"text"},{"type":"text","text":"Use for making multiple updates efficiently without triggering intermediate notifications"}],"title":"beginUpdates()","kind":"symbol","url":"\/documentation\/pledge\/plobservable\/beginupdates()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"beginUpdates","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/beginUpdates()"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/throttle(for:)":{"url":"\/documentation\/pledge\/plobservable\/throttle(for:)","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/throttle(for:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"throttle"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Throttles notifications to at most one per specified time interval.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Only the first update in the interval passes through."}],"role":"symbol","kind":"symbol","title":"throttle(for:)"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/compactMap()":{"type":"topic","kind":"symbol","title":"compactMap()","abstract":[{"type":"text","text":"Unwraps optional values from an observable, only emitting non-nil values."}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/compactMap()","url":"\/documentation\/pledge\/plobservable\/compactmap()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"U","kind":"genericParameter"},{"kind":"text","text":">() -> "},{"text":"PLObservable","kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC10compactMapACyqd__Gyqd__SgRszlF1UL_qd__mfp","text":"U"},{"kind":"text","text":">"}]},"doc://pledge.Pledge/documentation/Pledge/PLObservable/merge(_:)":{"type":"topic","title":"merge(_:)","role":"symbol","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/merge(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"("},{"text":"PLObservable","kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp"},{"kind":"text","text":">) -> "},{"text":"PLObservable","preciseIdentifier":"s:6Pledge12PLObservableC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp"},{"kind":"text","text":">"}],"url":"\/documentation\/pledge\/plobservable\/merge(_:)","abstract":[{"type":"text","text":"Merges this observable with another observable of the same type."},{"text":" ","type":"text"},{"type":"text","text":"The resulting observable emits a value whenever either source observable emits a value."}],"kind":"symbol"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/init(_:)":{"title":"init(_:)","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/init(_:)","url":"\/documentation\/pledge\/plobservable\/init(_:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"text":"Initializes a new observable with the given initial value","type":"text"}],"kind":"symbol"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/failure(_:)":{"url":"\/documentation\/pledge\/plobservable\/failure(_:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"T"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Result<Any, any Error>"},{"type":"text","text":"."}]},"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/failure(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"failure","kind":"identifier"},{"text":"<","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"text":"E","preciseIdentifier":"s:6Pledge12PLObservableCAAs6ResultOyyps5Error_pGRszlE7failureyACyAEyqd__qd_0_GGqd_0_sAFRd_0_r0_lFZ1EL_qd_0_mfp","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC","text":"PLObservable"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:6Pledge12PLObservableCAAs6ResultOyyps5Error_pGRszlE7failureyACyAEyqd__qd_0_GGqd_0_sAFRd_0_r0_lFZ1UL_qd__mfp","text":"U","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:6Pledge12PLObservableCAAs6ResultOyyps5Error_pGRszlE7failureyACyAEyqd__qd_0_GGqd_0_sAFRd_0_r0_lFZ1EL_qd_0_mfp","kind":"typeIdentifier","text":"E"},{"kind":"text","text":">>"}],"type":"topic","abstract":[{"type":"text","text":"Creates a new observable with a failure value of type E."}],"role":"symbol","kind":"symbol","title":"failure(_:)"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/flatMapSuccess(_:)":{"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Result<Any, any Error>"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"Flat maps the success value of the observable to a new observable."}],"type":"topic","title":"flatMapSuccess(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMapSuccess","kind":"identifier"},{"kind":"text","text":"<"},{"text":"U","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":") -> "},{"text":"PLObservable","kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"kind":"text","text":"<"},{"text":"U","kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableCAAs6ResultOyyps5Error_pGRszlE14flatMapSuccessyACyAEyqd__sAF_pGGAJypclF1UL_qd__mfp"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">>) -> ","kind":"text"},{"preciseIdentifier":"s:6Pledge12PLObservableC","text":"PLObservable","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableCAAs6ResultOyyps5Error_pGRszlE14flatMapSuccessyACyAEyqd__sAF_pGGAJypclF1UL_qd__mfp","text":"U"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">>"}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/flatMapSuccess(_:)","role":"symbol","url":"\/documentation\/pledge\/plobservable\/flatmapsuccess(_:)"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/removeAllSubscribers()":{"url":"\/documentation\/pledge\/plobservable\/removeallsubscribers()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"removeAllSubscribers","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","title":"removeAllSubscribers()","abstract":[{"text":"Removes all subscribers","type":"text"},{"text":" ","type":"text"},{"text":"Use when you need to clean up all subscriptions at once","type":"text"}],"kind":"symbol","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/removeAllSubscribers()"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/flatMap(_:)":{"abstract":[{"type":"text","text":"Transforms values with an asynchronous operation, capturing the result when ready."}],"role":"symbol","url":"\/documentation\/pledge\/plobservable\/flatmap(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/flatMap(_:)","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"PLObservable","preciseIdentifier":"s:6Pledge12PLObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"U","preciseIdentifier":"s:6Pledge12PLObservableC7flatMapyACyqd__GAExclF1UL_qd__mfp"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"PLObservable","preciseIdentifier":"s:6Pledge12PLObservableC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6Pledge12PLObservableC7flatMapyACyqd__GAExclF1UL_qd__mfp","text":"U","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://pledge.Pledge/documentation/Pledge/PLObservable/zip(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Zips values from two observables, emitting pairs of values when both observables have produced a new value."}],"type":"topic","title":"zip(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"zip"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"PLObservable","preciseIdentifier":"s:6Pledge12PLObservableC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC3zipyACyx_qd__tGACyqd__GlF1UL_qd__mfp","text":"U"},{"text":">) -> ","kind":"text"},{"text":"PLObservable","preciseIdentifier":"s:6Pledge12PLObservableC","kind":"typeIdentifier"},{"text":"<(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp","text":"T"},{"kind":"text","text":", "},{"preciseIdentifier":"s:6Pledge12PLObservableC3zipyACyx_qd__tGACyqd__GlF1UL_qd__mfp","kind":"typeIdentifier","text":"U"},{"kind":"text","text":")>"}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/zip(_:)","role":"symbol","url":"\/documentation\/pledge\/plobservable\/zip(_:)"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/endUpdates()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endUpdates"},{"kind":"text","text":"()"}],"title":"endUpdates()","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/endUpdates()","url":"\/documentation\/pledge\/plobservable\/endupdates()","abstract":[{"type":"text","text":"Ends a batch update session and sends a single notification if changes occurred"},{"text":" ","type":"text"},{"text":"Should be called after beginUpdates() to resume normal notification behavior","type":"text"}],"role":"symbol","kind":"symbol"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/unsubscribe(_:)":{"abstract":[{"type":"text","text":"Removes a subscriber"}],"role":"symbol","url":"\/documentation\/pledge\/plobservable\/unsubscribe(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/unsubscribe(_:)","title":"unsubscribe(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unsubscribe"},{"text":"(","kind":"text"},{"text":"UUID","preciseIdentifier":"s:10Foundation4UUIDV","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://pledge.Pledge/documentation/Pledge/PLObservable":{"title":"PLObservable","navigatorTitle":[{"kind":"identifier","text":"PLObservable"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PLObservable","kind":"identifier"}],"role":"symbol","url":"\/documentation\/pledge\/plobservable","abstract":[{"type":"text","text":"A thread-safe observable container that notifies subscribers when its value changes."},{"type":"text","text":" "},{"text":"Supports batch updates, thread-specific delivery, and priority-ordered notifications.","type":"text"}],"type":"topic","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable","kind":"symbol"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/mapSuccess(_:)":{"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" is "},{"code":"Result<Any, any Error>","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"Maps the success value of the observable to a new value of type U."}],"type":"topic","title":"mapSuccess(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mapSuccess"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">(("},{"kind":"keyword","text":"Any"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"U","preciseIdentifier":"s:6Pledge12PLObservableCAAs6ResultOyyps5Error_pGRszlE10mapSuccessyACyAEyqd__sAF_pGGqd__ypclF1UL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PLObservable","preciseIdentifier":"s:6Pledge12PLObservableC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6Pledge12PLObservableCAAs6ResultOyyps5Error_pGRszlE10mapSuccessyACyAEyqd__sAF_pGGqd__ypclF1UL_qd__mfp","text":"U","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":">>","kind":"text"}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/mapSuccess(_:)","role":"symbol","url":"\/documentation\/pledge\/plobservable\/mapsuccess(_:)"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/deliverOnMain()":{"abstract":[{"type":"text","text":"Specifies that the next subscription should receive updates on the main queue"},{"type":"text","text":" "},{"type":"text","text":"Convenience method for UI updates that must happen on the main thread"}],"role":"symbol","url":"\/documentation\/pledge\/plobservable\/deliveronmain()","kind":"symbol","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/deliverOnMain()","type":"topic","title":"deliverOnMain()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deliverOnMain"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://pledge.Pledge/documentation/Pledge/PLObservable/debounce(for:)":{"kind":"symbol","abstract":[{"text":"Debounces notifications, waiting until updates pause for the specified time interval.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Only sends a notification after the “quiet period” has elapsed."}],"type":"topic","title":"debounce(for:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debounce","kind":"identifier"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/debounce(for:)","role":"symbol","url":"\/documentation\/pledge\/plobservable\/debounce(for:)"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/filter(_:)":{"type":"topic","abstract":[{"text":"Creates a new observable that only emits values that satisfy the given predicate.","type":"text"}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/filter(_:)","url":"\/documentation\/pledge\/plobservable\/filter(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"filter","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp","text":"T"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:6Pledge12PLObservableC","text":"PLObservable","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp"},{"text":">","kind":"text"}],"kind":"symbol","title":"filter(_:)","role":"symbol"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/skip(_:)":{"abstract":[{"type":"text","text":"Creates a new observable that skips the first n emissions."}],"role":"symbol","url":"\/documentation\/pledge\/plobservable\/skip(_:)","kind":"symbol","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/skip(_:)","type":"topic","title":"skip(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"skip"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:6Pledge12PLObservableC","text":"PLObservable","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp"},{"text":">","kind":"text"}]},"doc://pledge.Pledge/documentation/Pledge/PLObservable/distinctUntilChanged()":{"kind":"symbol","abstract":[{"text":"Creates a new observable that only emits values that are distinct from the previous value.","type":"text"},{"type":"text","text":" "},{"text":"This version uses Equatable for the comparison.","type":"text"}],"type":"topic","title":"distinctUntilChanged()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"distinctUntilChanged"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC","text":"PLObservable"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp"},{"kind":"text","text":">"}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/distinctUntilChanged()","role":"symbol","url":"\/documentation\/pledge\/plobservable\/distinctuntilchanged()"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/deliver(on:)":{"title":"deliver(on:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deliver","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)OS_dispatch_queue","text":"DispatchQueue"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"Specifies a custom dispatch queue for the next subscription","type":"text"}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/deliver(on:)","role":"symbol","url":"\/documentation\/pledge\/plobservable\/deliver(on:)"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/withPriority(_:)":{"abstract":[{"type":"text","text":"Sets the priority for the next subscription"},{"type":"text","text":" "},{"text":"Higher priority subscribers receive notifications before lower priority ones","type":"text"}],"role":"symbol","url":"\/documentation\/pledge\/plobservable\/withpriority(_:)","kind":"symbol","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/withPriority(_:)","type":"topic","title":"withPriority(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withPriority"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:6Pledge18PLObserverPriorityO","text":"PLObserverPriority","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://pledge.Pledge/documentation/Pledge/PLObservable/mapError(_:)":{"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Result<Any, any Error>","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Maps the error value of the observable to a new error of type E."}],"type":"topic","title":"mapError(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mapError","kind":"identifier"},{"kind":"text","text":"<"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableCAAs6ResultOyyps5Error_pGRszlE03mapD0yACyAEyypqd__GGqd__sAF_pcsAFRd__lF1EL_qd__mfp","text":"E"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"PLObservable","preciseIdentifier":"s:6Pledge12PLObservableC"},{"kind":"text","text":"<"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"preciseIdentifier":"s:6Pledge12PLObservableCAAs6ResultOyyps5Error_pGRszlE03mapD0yACyAEyypqd__GGqd__sAF_pcsAFRd__lF1EL_qd__mfp","text":"E","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/mapError(_:)","role":"symbol","url":"\/documentation\/pledge\/plobservable\/maperror(_:)"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/distinctUntilChanged(by:)":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/pledge\/plobservable\/distinctuntilchanged(by:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"distinctUntilChanged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Pledge12PLObservableC","text":"PLObservable"},{"kind":"text","text":"<"},{"text":"T","preciseIdentifier":"s:6Pledge12PLObservableC1Txmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/distinctUntilChanged(by:)","abstract":[{"text":"Creates a new observable that only emits values that are distinct from the previous value.","type":"text"}],"title":"distinctUntilChanged(by:)"},"doc://pledge.Pledge/documentation/Pledge/PLObservable/notifyObservers()":{"title":"notifyObservers()","abstract":[{"text":"Notifies all registered observers with the current value","type":"text"},{"type":"text","text":" "},{"text":"Useful for manually triggering updates without changing the value","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge\/PLObservable\/notifyObservers()","role":"symbol","url":"\/documentation\/pledge\/plobservable\/notifyobservers()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"notifyObservers"},{"text":"()","kind":"text"}]},"doc://pledge.Pledge/documentation/Pledge":{"url":"\/documentation\/pledge","abstract":[],"role":"collection","identifier":"doc:\/\/pledge.Pledge\/documentation\/Pledge","title":"Pledge","type":"topic","kind":"symbol"}}}